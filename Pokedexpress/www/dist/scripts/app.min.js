(function(){
    "use strict";
    this.App = (function(Backbone, Marionette){
        var App = new Backbone.Marionette.Application();

        App.addRegions({
           mainRegion: "#mainRegion"
        });

        App.navigate = function(route,  options){
            options || (options = {});
            Backbone.history.navigate(route, options);
        };

        App.getCurrentRoute = function () {
            return Backbone.history.fragment;
        };

        App.addInitializer(function(){
            console.log('Application is initializing...');
        });

        //Start history when our application is ready
        App.on('start', function() {
            console.log('Application is starting...');
            if(Backbone.history){
                console.log('Backbone History is starting...');
                Backbone.history.start();
            }

            if(App.getCurrentRoute() === ""){
                App.navigate('home');
            }

        });

        return App;
    })(Backbone, Marionette);
    
}).call(this);

(function(){
    "use strict";
    (function(Handlebars, Backbone){
        Backbone.Marionette.Renderer.render = function ( templateId, data ) {
            var template = Handlebars.templates[templateId](data);

            if(template){
                return template;
            }
            else{
                throw "Template " + templateId + " wasn't found."
            }
        };
    }(Handlebars, Backbone));
}).call(this);
(function(){
    "use strict";
    (function(Handlebars){
        Handlebars.registerHelper('something', function(text, url) {
            text = Handlebars.Utils.escapeExpression(text);
            url  = Handlebars.Utils.escapeExpression(url);

            var result = '<a href="' + url + '">' + text + '</a>';

            return new Handlebars.SafeString(result);
        });
    }(Handlebars));
}).call(this);
(function(){
    "use strict";
    this.App.module("Entities", function(Entities, App, Backbone, Marionette, $, _){

        Entities.QueryModel = Backbone.Model.extend({
            id: 'mainQueryModel'
        });

        Entities.QueryCollection = Backbone.Collection.extend({
            model: Entities.QueryModel,
            id: 'mainQueryCollection'
        });

        var API = {

            getMainQuery: function(sqlQuery, callBack){
                return $.ajax({
                    url: App.options.IPAddr,
                    type: 'GET',
                    data: { sqlQuery: sqlQuery} ,
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        var collection = new Entities.QueryCollection(response);
                        console.log(collection);
                        callBack(collection);
                    },
                    error: function () {
                        alert("ERROR: Failed to get Main Query.");
                    }
                });
            }
        };

        App.reqres.setHandler('get:Main:Query', function(sqlQuery, callBack){
            return API.getMainQuery(sqlQuery, callBack);
        });

    })
}).call(this);
(function(){
    "use strict";
    this.App.module("MainController.HomePage", function(HomePage, App, Backbone, Marionette, $, _){

        HomePage.Controller = {
            showView: function (options) {
                var _this = this;

                var homePage = _this.getLayoutView("");
                App.mainRegion.show(homePage);

                App.listenTo(homePage, "submit:Btn:Click", function(sqlQuery){
                    debugger;
                    App.request("get:Main:Query", sqlQuery, function(sqlQueryResult){
                        homePage = _this.getLayoutView({
                            sqlQueryResult: sqlQueryResult
                        });

                        App.mainRegion.show(homePage);
                    });
                });

                App.listenTo(homePage, "destroy", function(){
                    _this.HomePage.Controller.destroy();
                });
            },

            getLayoutView: function(data){
                return new HomePage.MainLayout({
                    sqlQueryResult: data.sqlQueryResult
                });
            }
        };

    });
}).call(this);
(function(){
    "use strict";
    this.App.module("MainController.HomePage", function(HomePage, App, Backbone, Marionette, $, _){

        HomePage.MainLayout = Backbone.Marionette.LayoutView.extend({
            template: "main_layout",
            tagName: "div",
            serializeData:function(){
                var sqlQueryResult = this.options.sqlQueryResult;

                return {
                    sqlQueryResult: sqlQueryResult
                }
            },
            triggers:{
                "click #queryButton": "submit:Btn:Clicked"
            }
        });
        
        

    })
}).call(this);
(function(){
    "use strict";
    this.App.module("MainController", function(MainController, App, Backbone, Marionette, $, _){

        var appRouterHandler = {
           "": "getHomePage",
           "home": "getHomePage"
        };
        
        var API = {
            getHomePage: function(options){
                console.log("Returning controller for home page");
                return MainController.HomePage.Controller.showView();
            }
        };

        MainController.Router = Backbone.Marionette.AppRouter.extend({
            appRoutes: appRouterHandler,
            controller: API
        });

        App.addInitializer(function(options){
            console.log('initializing MainController routing...');
            return new MainController.Router();
        });

    })
}).call(this);
App.start({
    IPAddr: '192.168.68.01'
});